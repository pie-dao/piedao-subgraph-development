type GlobalStat @entity {
  id: ID!,
  depositedLocksCounter: BigInt!
  depositedLocksValue: BigInt!
  withdrawnLocksCounter: BigInt!
  withdrawnLocksValue: BigInt!
  ejectedLocksCounter: BigInt!
  ejectedLocksValue: BigInt!
  boostedLocksCounter: BigInt!
  boostedLocksValue: BigInt!
  locksDuration: BigInt!
  totalStaked: BigInt!
  veTokenTotalSupply: BigInt!
}

type Staker @entity {
  id: ID!
  accountLocks: [Lock!]! @derivedFrom(field: "staker")
  accountRewards: [Reward!]! @derivedFrom(field: "staker")
  totalStaked: BigInt!
  veTokenTotalSupply: BigInt!
  accountVeTokenBalance: BigInt!
  accountWithdrawableRewards: BigInt!
  accountWithdrawnRewards: BigInt!
  accountDepositTokenBalance: BigInt!
  accountDepositTokenAllowance: BigInt!
}

type StakersTracker @entity {
  id: ID!
  counter: BigInt!
  stakers: [String!]!
}

type LocksTracker @entity {
  id: ID!
  counter: BigInt!
  locks: [String!]!
}

type Reward @entity {
  id:  ID!
  timestamp: BigInt!
  amount: BigInt!
  staker: Staker!
  type: String!
}

type Lock @entity {
  id: ID!
  lockId: BigInt!
  lockDuration: BigInt!
  lockedAt: BigInt!
  amount: BigInt!
  staker: Staker!
  withdrawn: Boolean!
  ejected: Boolean!
  boosted: Boolean!
  boostedPointer: ID!
}
